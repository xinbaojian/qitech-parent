server:
  port: 8080

spring:
  application:
    name: qitech-demo
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:192.168.25.201}:${DB_PORT:5432}/${DB_NAME:security}?characterEncoding=utf8&useSSL=false
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:123456}
    druid:
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计
      filters: stat,wall
      # 初始化时建立物理连接的个数
      initial-size: 5
      keep-alive: true
      # 最大连接池数量
      max-active: 100
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      max-pool-prepared-statement-per-connection-size: 100
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 300000
      # 最小连接池数量
      min-idle: 5
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭
      pool-prepared-statements: true
      stat-view-servlet:
        # 允许所有ip 访问 druid
        allow:
        # druid连接池监控
        enabled: true
        login-username: qitech
        login-password: show@me@the@money
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: true
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 30000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 用来检测连接是否有效的sql，要求是一个查询语句
      validation-query: select 'x'
      web-stat-filter:
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
  http:
    # 过滤字符编码
    encoding:
      charset: UTF-8
      enabled: true
      force: true
mybatis:
  type-aliases-package: com.qitech.qitechdemo.entity
  mapper-locations: classpath:mapper/*.xml
# pagehelper配置
pagehelper:
  helperDialect: postgresql
  #分页合理化，pageNum<=0则查询第一页的记录；pageNum大于总页数，则查询最后一页的记录
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

logging:
  config: classpath:config/logback.xml
  # 打印sql
  level:
    com.qitech.mybatis.mapper : debug